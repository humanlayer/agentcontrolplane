/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package humanlayerapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the HumanContactSpecOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HumanContactSpecOutput{}

// HumanContactSpecOutput struct for HumanContactSpecOutput
type HumanContactSpecOutput struct {
	Msg             string                       `json:"msg"`
	Subject         NullableString               `json:"subject,omitempty"`
	Channel         NullableContactChannelOutput `json:"channel,omitempty"`
	ResponseOptions []ResponseOption             `json:"response_options,omitempty"`
	State           map[string]interface{}       `json:"state,omitempty"`
}

type _HumanContactSpecOutput HumanContactSpecOutput

// NewHumanContactSpecOutput instantiates a new HumanContactSpecOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHumanContactSpecOutput(msg string) *HumanContactSpecOutput {
	this := HumanContactSpecOutput{}
	this.Msg = msg
	return &this
}

// NewHumanContactSpecOutputWithDefaults instantiates a new HumanContactSpecOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHumanContactSpecOutputWithDefaults() *HumanContactSpecOutput {
	this := HumanContactSpecOutput{}
	return &this
}

// GetMsg returns the Msg field value
func (o *HumanContactSpecOutput) GetMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *HumanContactSpecOutput) GetMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *HumanContactSpecOutput) SetMsg(v string) {
	o.Msg = v
}

// GetSubject returns the Subject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HumanContactSpecOutput) GetSubject() string {
	if o == nil || IsNil(o.Subject.Get()) {
		var ret string
		return ret
	}
	return *o.Subject.Get()
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HumanContactSpecOutput) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subject.Get(), o.Subject.IsSet()
}

// HasSubject returns a boolean if a field has been set.
func (o *HumanContactSpecOutput) HasSubject() bool {
	if o != nil && o.Subject.IsSet() {
		return true
	}

	return false
}

// SetSubject gets a reference to the given NullableString and assigns it to the Subject field.
func (o *HumanContactSpecOutput) SetSubject(v string) {
	o.Subject.Set(&v)
}

// SetSubjectNil sets the value for Subject to be an explicit nil
func (o *HumanContactSpecOutput) SetSubjectNil() {
	o.Subject.Set(nil)
}

// UnsetSubject ensures that no value is present for Subject, not even an explicit nil
func (o *HumanContactSpecOutput) UnsetSubject() {
	o.Subject.Unset()
}

// GetChannel returns the Channel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HumanContactSpecOutput) GetChannel() ContactChannelOutput {
	if o == nil || IsNil(o.Channel.Get()) {
		var ret ContactChannelOutput
		return ret
	}
	return *o.Channel.Get()
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HumanContactSpecOutput) GetChannelOk() (*ContactChannelOutput, bool) {
	if o == nil {
		return nil, false
	}
	return o.Channel.Get(), o.Channel.IsSet()
}

// HasChannel returns a boolean if a field has been set.
func (o *HumanContactSpecOutput) HasChannel() bool {
	if o != nil && o.Channel.IsSet() {
		return true
	}

	return false
}

// SetChannel gets a reference to the given NullableContactChannelOutput and assigns it to the Channel field.
func (o *HumanContactSpecOutput) SetChannel(v ContactChannelOutput) {
	o.Channel.Set(&v)
}

// SetChannelNil sets the value for Channel to be an explicit nil
func (o *HumanContactSpecOutput) SetChannelNil() {
	o.Channel.Set(nil)
}

// UnsetChannel ensures that no value is present for Channel, not even an explicit nil
func (o *HumanContactSpecOutput) UnsetChannel() {
	o.Channel.Unset()
}

// GetResponseOptions returns the ResponseOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HumanContactSpecOutput) GetResponseOptions() []ResponseOption {
	if o == nil {
		var ret []ResponseOption
		return ret
	}
	return o.ResponseOptions
}

// GetResponseOptionsOk returns a tuple with the ResponseOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HumanContactSpecOutput) GetResponseOptionsOk() ([]ResponseOption, bool) {
	if o == nil || IsNil(o.ResponseOptions) {
		return nil, false
	}
	return o.ResponseOptions, true
}

// HasResponseOptions returns a boolean if a field has been set.
func (o *HumanContactSpecOutput) HasResponseOptions() bool {
	if o != nil && !IsNil(o.ResponseOptions) {
		return true
	}

	return false
}

// SetResponseOptions gets a reference to the given []ResponseOption and assigns it to the ResponseOptions field.
func (o *HumanContactSpecOutput) SetResponseOptions(v []ResponseOption) {
	o.ResponseOptions = v
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HumanContactSpecOutput) GetState() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HumanContactSpecOutput) GetStateOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.State) {
		return map[string]interface{}{}, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *HumanContactSpecOutput) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given map[string]interface{} and assigns it to the State field.
func (o *HumanContactSpecOutput) SetState(v map[string]interface{}) {
	o.State = v
}

func (o HumanContactSpecOutput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HumanContactSpecOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["msg"] = o.Msg
	if o.Subject.IsSet() {
		toSerialize["subject"] = o.Subject.Get()
	}
	if o.Channel.IsSet() {
		toSerialize["channel"] = o.Channel.Get()
	}
	if o.ResponseOptions != nil {
		toSerialize["response_options"] = o.ResponseOptions
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

func (o *HumanContactSpecOutput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"msg",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHumanContactSpecOutput := _HumanContactSpecOutput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHumanContactSpecOutput)

	if err != nil {
		return err
	}

	*o = HumanContactSpecOutput(varHumanContactSpecOutput)

	return err
}

type NullableHumanContactSpecOutput struct {
	value *HumanContactSpecOutput
	isSet bool
}

func (v NullableHumanContactSpecOutput) Get() *HumanContactSpecOutput {
	return v.value
}

func (v *NullableHumanContactSpecOutput) Set(val *HumanContactSpecOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableHumanContactSpecOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableHumanContactSpecOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHumanContactSpecOutput(val *HumanContactSpecOutput) *NullableHumanContactSpecOutput {
	return &NullableHumanContactSpecOutput{value: val, isSet: true}
}

func (v NullableHumanContactSpecOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHumanContactSpecOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
