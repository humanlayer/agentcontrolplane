# Remember to add your OpenAI and HumanLayer secrets
apiVersion: kubechain.humanlayer.dev/v1alpha1
kind: ContactChannel
metadata:
  name: approval-channel 
spec:
  type: email # Replace with "slack" if using Slack
  apiKeyFrom:
    secretKeyRef:
      name: humanlayer-api-key
      key: api-key
  slack:
    channelOrUserID: "C07HR5JL15F" # Replace with actual Slack channel ID
    contextAboutChannelOrUser: "Channel for approving web fetch operations"
  email:
    address: "approver@example.com" # Replace with actual target email address
    subject: "Approval Request from Kubechain"
    contextAboutUser: "Primary approver for web fetch operations"
---
apiVersion: kubechain.humanlayer.dev/v1alpha1
kind: LLM
metadata:
  name: gpt-4o
spec:
  provider: openai
  apiKeyFrom:
    secretKeyRef:
      name: openai
      key: OPENAI_API_KEY
---
apiVersion: kubechain.humanlayer.dev/v1alpha1
kind: MCPServer
metadata:
  name: fetch
spec:
  transport: "stdio"
  command: "uvx"
  args: ["mcp-server-fetch"]
  # When an approvalContactChannel is specified, 
  # all tools on this MCP server will wait for human approval prior executing.
  approvalContactChannel:
    name: approval-channel 
---
apiVersion: kubechain.humanlayer.dev/v1alpha1
kind: Agent
metadata:
  name: agent-with-fetch
spec:
  llmRef:
    name: gpt-4o
  system: |
    You are a helpful assistant. Your job is to help the user with their tasks.
  mcpServers:
    - name: fetch
---
apiVersion: kubechain.humanlayer.dev/v1alpha1
kind: Task
metadata:
  name: approved-fetch-task
spec:
  agentRef:
    name: agent-with-fetch 
  message: "Write me a haiku about the character found at https://swapi.dev/api/people/2?"
