/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package humanlayerapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SlackContactChannelInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SlackContactChannelInput{}

// SlackContactChannelInput Route for contacting a user or channel via slack
type SlackContactChannelInput struct {
	ChannelOrUserId           string         `json:"channel_or_user_id"`
	ContextAboutChannelOrUser NullableString `json:"context_about_channel_or_user,omitempty"`
	BotToken                  NullableString `json:"bot_token,omitempty"`
	AllowedResponderIds       []string       `json:"allowed_responder_ids,omitempty"`
	ExperimentalSlackBlocks   NullableBool   `json:"experimental_slack_blocks,omitempty"`
	ThreadTs                  NullableString `json:"thread_ts,omitempty"`
}

type _SlackContactChannelInput SlackContactChannelInput

// NewSlackContactChannelInput instantiates a new SlackContactChannelInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlackContactChannelInput(channelOrUserId string) *SlackContactChannelInput {
	this := SlackContactChannelInput{}
	this.ChannelOrUserId = channelOrUserId
	return &this
}

// NewSlackContactChannelInputWithDefaults instantiates a new SlackContactChannelInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlackContactChannelInputWithDefaults() *SlackContactChannelInput {
	this := SlackContactChannelInput{}
	return &this
}

// GetChannelOrUserId returns the ChannelOrUserId field value
func (o *SlackContactChannelInput) GetChannelOrUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelOrUserId
}

// GetChannelOrUserIdOk returns a tuple with the ChannelOrUserId field value
// and a boolean to check if the value has been set.
func (o *SlackContactChannelInput) GetChannelOrUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelOrUserId, true
}

// SetChannelOrUserId sets field value
func (o *SlackContactChannelInput) SetChannelOrUserId(v string) {
	o.ChannelOrUserId = v
}

// GetContextAboutChannelOrUser returns the ContextAboutChannelOrUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlackContactChannelInput) GetContextAboutChannelOrUser() string {
	if o == nil || IsNil(o.ContextAboutChannelOrUser.Get()) {
		var ret string
		return ret
	}
	return *o.ContextAboutChannelOrUser.Get()
}

// GetContextAboutChannelOrUserOk returns a tuple with the ContextAboutChannelOrUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackContactChannelInput) GetContextAboutChannelOrUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContextAboutChannelOrUser.Get(), o.ContextAboutChannelOrUser.IsSet()
}

// HasContextAboutChannelOrUser returns a boolean if a field has been set.
func (o *SlackContactChannelInput) HasContextAboutChannelOrUser() bool {
	if o != nil && o.ContextAboutChannelOrUser.IsSet() {
		return true
	}

	return false
}

// SetContextAboutChannelOrUser gets a reference to the given NullableString and assigns it to the ContextAboutChannelOrUser field.
func (o *SlackContactChannelInput) SetContextAboutChannelOrUser(v string) {
	o.ContextAboutChannelOrUser.Set(&v)
}

// SetContextAboutChannelOrUserNil sets the value for ContextAboutChannelOrUser to be an explicit nil
func (o *SlackContactChannelInput) SetContextAboutChannelOrUserNil() {
	o.ContextAboutChannelOrUser.Set(nil)
}

// UnsetContextAboutChannelOrUser ensures that no value is present for ContextAboutChannelOrUser, not even an explicit nil
func (o *SlackContactChannelInput) UnsetContextAboutChannelOrUser() {
	o.ContextAboutChannelOrUser.Unset()
}

// GetBotToken returns the BotToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlackContactChannelInput) GetBotToken() string {
	if o == nil || IsNil(o.BotToken.Get()) {
		var ret string
		return ret
	}
	return *o.BotToken.Get()
}

// GetBotTokenOk returns a tuple with the BotToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackContactChannelInput) GetBotTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BotToken.Get(), o.BotToken.IsSet()
}

// HasBotToken returns a boolean if a field has been set.
func (o *SlackContactChannelInput) HasBotToken() bool {
	if o != nil && o.BotToken.IsSet() {
		return true
	}

	return false
}

// SetBotToken gets a reference to the given NullableString and assigns it to the BotToken field.
func (o *SlackContactChannelInput) SetBotToken(v string) {
	o.BotToken.Set(&v)
}

// SetBotTokenNil sets the value for BotToken to be an explicit nil
func (o *SlackContactChannelInput) SetBotTokenNil() {
	o.BotToken.Set(nil)
}

// UnsetBotToken ensures that no value is present for BotToken, not even an explicit nil
func (o *SlackContactChannelInput) UnsetBotToken() {
	o.BotToken.Unset()
}

// GetAllowedResponderIds returns the AllowedResponderIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlackContactChannelInput) GetAllowedResponderIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AllowedResponderIds
}

// GetAllowedResponderIdsOk returns a tuple with the AllowedResponderIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackContactChannelInput) GetAllowedResponderIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedResponderIds) {
		return nil, false
	}
	return o.AllowedResponderIds, true
}

// HasAllowedResponderIds returns a boolean if a field has been set.
func (o *SlackContactChannelInput) HasAllowedResponderIds() bool {
	if o != nil && !IsNil(o.AllowedResponderIds) {
		return true
	}

	return false
}

// SetAllowedResponderIds gets a reference to the given []string and assigns it to the AllowedResponderIds field.
func (o *SlackContactChannelInput) SetAllowedResponderIds(v []string) {
	o.AllowedResponderIds = v
}

// GetExperimentalSlackBlocks returns the ExperimentalSlackBlocks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlackContactChannelInput) GetExperimentalSlackBlocks() bool {
	if o == nil || IsNil(o.ExperimentalSlackBlocks.Get()) {
		var ret bool
		return ret
	}
	return *o.ExperimentalSlackBlocks.Get()
}

// GetExperimentalSlackBlocksOk returns a tuple with the ExperimentalSlackBlocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackContactChannelInput) GetExperimentalSlackBlocksOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExperimentalSlackBlocks.Get(), o.ExperimentalSlackBlocks.IsSet()
}

// HasExperimentalSlackBlocks returns a boolean if a field has been set.
func (o *SlackContactChannelInput) HasExperimentalSlackBlocks() bool {
	if o != nil && o.ExperimentalSlackBlocks.IsSet() {
		return true
	}

	return false
}

// SetExperimentalSlackBlocks gets a reference to the given NullableBool and assigns it to the ExperimentalSlackBlocks field.
func (o *SlackContactChannelInput) SetExperimentalSlackBlocks(v bool) {
	o.ExperimentalSlackBlocks.Set(&v)
}

// SetExperimentalSlackBlocksNil sets the value for ExperimentalSlackBlocks to be an explicit nil
func (o *SlackContactChannelInput) SetExperimentalSlackBlocksNil() {
	o.ExperimentalSlackBlocks.Set(nil)
}

// UnsetExperimentalSlackBlocks ensures that no value is present for ExperimentalSlackBlocks, not even an explicit nil
func (o *SlackContactChannelInput) UnsetExperimentalSlackBlocks() {
	o.ExperimentalSlackBlocks.Unset()
}

// GetThreadTs returns the ThreadTs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlackContactChannelInput) GetThreadTs() string {
	if o == nil || IsNil(o.ThreadTs.Get()) {
		var ret string
		return ret
	}
	return *o.ThreadTs.Get()
}

// GetThreadTsOk returns a tuple with the ThreadTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackContactChannelInput) GetThreadTsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ThreadTs.Get(), o.ThreadTs.IsSet()
}

// HasThreadTs returns a boolean if a field has been set.
func (o *SlackContactChannelInput) HasThreadTs() bool {
	if o != nil && o.ThreadTs.IsSet() {
		return true
	}

	return false
}

// SetThreadTs gets a reference to the given NullableString and assigns it to the ThreadTs field.
func (o *SlackContactChannelInput) SetThreadTs(v string) {
	o.ThreadTs.Set(&v)
}

// SetThreadTsNil sets the value for ThreadTs to be an explicit nil
func (o *SlackContactChannelInput) SetThreadTsNil() {
	o.ThreadTs.Set(nil)
}

// UnsetThreadTs ensures that no value is present for ThreadTs, not even an explicit nil
func (o *SlackContactChannelInput) UnsetThreadTs() {
	o.ThreadTs.Unset()
}

func (o SlackContactChannelInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SlackContactChannelInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["channel_or_user_id"] = o.ChannelOrUserId
	if o.ContextAboutChannelOrUser.IsSet() {
		toSerialize["context_about_channel_or_user"] = o.ContextAboutChannelOrUser.Get()
	}
	if o.BotToken.IsSet() {
		toSerialize["bot_token"] = o.BotToken.Get()
	}
	if o.AllowedResponderIds != nil {
		toSerialize["allowed_responder_ids"] = o.AllowedResponderIds
	}
	if o.ExperimentalSlackBlocks.IsSet() {
		toSerialize["experimental_slack_blocks"] = o.ExperimentalSlackBlocks.Get()
	}
	if o.ThreadTs.IsSet() {
		toSerialize["thread_ts"] = o.ThreadTs.Get()
	}
	return toSerialize, nil
}

func (o *SlackContactChannelInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"channel_or_user_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSlackContactChannelInput := _SlackContactChannelInput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSlackContactChannelInput)

	if err != nil {
		return err
	}

	*o = SlackContactChannelInput(varSlackContactChannelInput)

	return err
}

type NullableSlackContactChannelInput struct {
	value *SlackContactChannelInput
	isSet bool
}

func (v NullableSlackContactChannelInput) Get() *SlackContactChannelInput {
	return v.value
}

func (v *NullableSlackContactChannelInput) Set(val *SlackContactChannelInput) {
	v.value = val
	v.isSet = true
}

func (v NullableSlackContactChannelInput) IsSet() bool {
	return v.isSet
}

func (v *NullableSlackContactChannelInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlackContactChannelInput(val *SlackContactChannelInput) *NullableSlackContactChannelInput {
	return &NullableSlackContactChannelInput{value: val, isSet: true}
}

func (v NullableSlackContactChannelInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlackContactChannelInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
