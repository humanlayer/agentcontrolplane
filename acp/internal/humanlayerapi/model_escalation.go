/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package humanlayerapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the Escalation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Escalation{}

// Escalation struct for Escalation
type Escalation struct {
	EscalationMsg        string           `json:"escalation_msg"`
	AdditionalRecipients []EmailRecipient `json:"additional_recipients,omitempty"`
}

type _Escalation Escalation

// NewEscalation instantiates a new Escalation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEscalation(escalationMsg string) *Escalation {
	this := Escalation{}
	this.EscalationMsg = escalationMsg
	return &this
}

// NewEscalationWithDefaults instantiates a new Escalation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEscalationWithDefaults() *Escalation {
	this := Escalation{}
	return &this
}

// GetEscalationMsg returns the EscalationMsg field value
func (o *Escalation) GetEscalationMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EscalationMsg
}

// GetEscalationMsgOk returns a tuple with the EscalationMsg field value
// and a boolean to check if the value has been set.
func (o *Escalation) GetEscalationMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EscalationMsg, true
}

// SetEscalationMsg sets field value
func (o *Escalation) SetEscalationMsg(v string) {
	o.EscalationMsg = v
}

// GetAdditionalRecipients returns the AdditionalRecipients field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Escalation) GetAdditionalRecipients() []EmailRecipient {
	if o == nil {
		var ret []EmailRecipient
		return ret
	}
	return o.AdditionalRecipients
}

// GetAdditionalRecipientsOk returns a tuple with the AdditionalRecipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Escalation) GetAdditionalRecipientsOk() ([]EmailRecipient, bool) {
	if o == nil || IsNil(o.AdditionalRecipients) {
		return nil, false
	}
	return o.AdditionalRecipients, true
}

// HasAdditionalRecipients returns a boolean if a field has been set.
func (o *Escalation) HasAdditionalRecipients() bool {
	if o != nil && !IsNil(o.AdditionalRecipients) {
		return true
	}

	return false
}

// SetAdditionalRecipients gets a reference to the given []EmailRecipient and assigns it to the AdditionalRecipients field.
func (o *Escalation) SetAdditionalRecipients(v []EmailRecipient) {
	o.AdditionalRecipients = v
}

func (o Escalation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Escalation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["escalation_msg"] = o.EscalationMsg
	if o.AdditionalRecipients != nil {
		toSerialize["additional_recipients"] = o.AdditionalRecipients
	}
	return toSerialize, nil
}

func (o *Escalation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"escalation_msg",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEscalation := _Escalation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEscalation)

	if err != nil {
		return err
	}

	*o = Escalation(varEscalation)

	return err
}

type NullableEscalation struct {
	value *Escalation
	isSet bool
}

func (v NullableEscalation) Get() *Escalation {
	return v.value
}

func (v *NullableEscalation) Set(val *Escalation) {
	v.value = val
	v.isSet = true
}

func (v NullableEscalation) IsSet() bool {
	return v.isSet
}

func (v *NullableEscalation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEscalation(val *Escalation) *NullableEscalation {
	return &NullableEscalation{value: val, isSet: true}
}

func (v NullableEscalation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEscalation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
