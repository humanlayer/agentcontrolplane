name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    # Use a larger runner for faster builds
    runs-on: ubuntu-latest-16-core
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      
      # Cache Go modules to speed up builds
      - name: Go Module Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set environment variables
        run: |
          # Strip 'v' prefix from tag name for version
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set DOCKER_BUILDKIT=1 for enhanced build performance
      - name: Set Docker Buildkit
        run: echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV

      # Set up enhanced BuildKit builder
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host
            image=moby/buildkit:latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./kubechain
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            MAKEFLAGS=-j16

      - name: Install Kustomize
        run: |
          cd kubechain
          make kustomize

      - name: Generate release manifests
        run: |
          cd kubechain
          mkdir -p config/release
          
          # Set the image to the versioned image
          cd config/manager && ../../bin/kustomize edit set image controller=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          cd ../..
          
          # Generate the full installation manifest
          bin/kustomize build config/default > config/release/v${{ env.VERSION }}.yaml
          
          # Generate CRD-only manifest
          bin/kustomize build config/crd > config/release/v${{ env.VERSION }}-crd.yaml
          
          # Also update the latest manifests
          cp config/release/v${{ env.VERSION }}.yaml config/release/latest.yaml
          cp config/release/v${{ env.VERSION }}-crd.yaml config/release/latest-crd.yaml

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.TAG }}
          draft: false
          prerelease: false
          files: |
            kubechain/config/release/v${{ env.VERSION }}.yaml
            kubechain/config/release/v${{ env.VERSION }}-crd.yaml
            
      - name: Commit updated release manifests
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add kubechain/config/release/v${{ env.VERSION }}.yaml
          git add kubechain/config/release/v${{ env.VERSION }}-crd.yaml
          git add kubechain/config/release/latest.yaml
          git add kubechain/config/release/latest-crd.yaml
          git commit -m "chore: update release manifests for ${{ env.TAG }}"
          git push